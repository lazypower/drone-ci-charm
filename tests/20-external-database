#!/usr/bin/env python3

import amulet
import requests
import unittest


class TestDeployment(unittest.TestCase):
    @classmethod
    def setUpClass(cls):
        cls.deployment = amulet.Deployment(series='trusty')

        cls.deployment.add('drone', 'local:trusty/drone')
        cls.deployment.add('mysql', 'cs:trusty/mysql')
        cls.deployment.relate('drone:db','mysql:db')
        cls.deployment.expose('drone')

        try:
            cls.deployment.setup(timeout=900)
            cls.deployment.sentry.wait()
        except amulet.helpers.TimeoutError:
            amulet.raise_status(amulet.SKIP, msg="Environment wasn't stood up in time")
        except:
            raise

    def test_basic_standup(self):
        '''
        Assert we are indeed talking to the drone service. If 'drone' is not
        discovered in the response body - we're not talking to drone and possibly
        to a 503 error page, or something has gone terribly awry.
        '''
        pub = self.deployment.sentry['drone/0'].info['public-address']
        response = requests.get("http://{}".format(pub))
        response.raise_for_status()
        response.raise_for_status
        assert "drone" in response.text


if __name__ == '__main__':
    unittest.main()
